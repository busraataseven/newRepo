@using PagedList;
@using PagedList.Mvc;
@model IPagedList<my_blog.Models.Movies>

@{
    ViewBag.Title = "Index";
}
<style>
    body {
        background-image: url("/Content/Image/image.jpg");
        background-repeat: no-repeat;
        background-size:cover;
    }
</style>
<h2>Index</h2>

<div class="col-md-4">
    <h2>See the movies in IMDB Top 250:</h2>
    <p><a href="http://www.imdb.com/chart/top?ref_=nv_ch_250_4" target="_blank">IMDB Top 250</a></p>
</div>

<p>
    @Html.ActionLink("Create New", "Create")
    @using (Html.BeginForm("Index", "Movies", FormMethod.Get))
    {
    <p>
        Genre: @Html.DropDownList("movieGenre", "All")
        Title: @Html.TextBox("SearchString") <br />
        <input type="submit" value="Filter" />
    </p>
    }
<p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Rating)
        </th>
        <th></th>
    </tr>
  
@foreach (var item in Model) {
    <tr>
        <td>
            
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReleaseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Rating)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}
    
</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, movieGenre = Request.QueryString["movieGenre"], searchString = Request.QueryString["searchString"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })